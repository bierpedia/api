// <auto-generated />
using System;
using Bierpedia.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bierpedia.Api.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20191114025400_Brewery_Add_Explicit_CountryId")]
    partial class Brewery_Add_Explicit_CountryId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("bierpedia")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Bierpedia.Api.Model.Beer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("beers");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.BeerBeerType", b =>
                {
                    b.Property<int>("BeerId")
                        .HasColumnName("beer_id")
                        .HasColumnType("integer");

                    b.Property<int>("BeerTypeId")
                        .HasColumnName("beer_type_id")
                        .HasColumnType("integer");

                    b.HasKey("BeerId", "BeerTypeId");

                    b.HasIndex("BeerTypeId");

                    b.ToTable("beer_beer_types");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.BeerBrewery", b =>
                {
                    b.Property<int>("BeerId")
                        .HasColumnName("beer_id")
                        .HasColumnType("integer");

                    b.Property<int>("BreweryId")
                        .HasColumnName("brewery_id")
                        .HasColumnType("integer");

                    b.HasKey("BeerId", "BreweryId");

                    b.HasIndex("BreweryId");

                    b.ToTable("beer_breweries");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.BeerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnName("parent_id")
                        .HasColumnType("integer");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("beer_types");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.Brewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("breweries");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BeerId")
                        .HasColumnName("beer_id")
                        .HasColumnType("integer");

                    b.Property<int>("Grade")
                        .HasColumnName("grade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.BeerBeerType", b =>
                {
                    b.HasOne("Bierpedia.Api.Model.Beer", "Beer")
                        .WithMany("BeerBeerTypes")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bierpedia.Api.Model.BeerType", "BeerType")
                        .WithMany()
                        .HasForeignKey("BeerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bierpedia.Api.Model.BeerBrewery", b =>
                {
                    b.HasOne("Bierpedia.Api.Model.Beer", "Beer")
                        .WithMany("BeerBreweries")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bierpedia.Api.Model.Brewery", "Brewery")
                        .WithMany()
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bierpedia.Api.Model.BeerType", b =>
                {
                    b.HasOne("Bierpedia.Api.Model.BeerType", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Bierpedia.Api.Model.Brewery", b =>
                {
                    b.HasOne("Bierpedia.Api.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bierpedia.Api.Model.Rating", b =>
                {
                    b.HasOne("Bierpedia.Api.Model.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId");
                });
#pragma warning restore 612, 618
        }
    }
}
